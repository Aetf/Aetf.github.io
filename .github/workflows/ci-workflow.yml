name: Hexo Site CI

# Trigger the workflow on push to any branch,
# or pull request to the develop branch
on:
  push:
  pull_request:
    branches: [ develop ]

env:
  CACHE_VERSION: v2

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Timezone
      run: sudo timedatectl set-timezone America/Los_Angeles

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: latest
    # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)
    - name: Cache node modules
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ env.CACHE_VERSION }}-
    - run: npm ci

    - name: Build hexo site
      run: |
        npm run clean
        npm run build

    - name: Unit tests
      run: npm test || cat stacktrace*.log
    - name: Link checks
      run: tools/link_check.sh

    - name: Upload hexo database
      uses: actions/upload-artifact@v3
      with:
        name: hexo-db
        path: |
          db.json
          node_modules/.cache/webpack

  deploy:
    needs: [build]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    steps:
    - name: Timezone
      run: sudo timedatectl set-timezone America/Los_Angeles

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: latest
    # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)
    - name: Cache node modules
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ env.CACHE_VERSION }}-
    - run: npm ci
    - name: Download hexo database
      uses: actions/download-artifact@v2
      with:
        name: hexo-db

    - name: Setup SSH
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        TARGET_HOST_KEY: '[archvps.hosts.unlimited-code.works]:59901 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBepF3TmcoEzemMXgvn3p2P8O0q6I+07uPEecu+8qutu'
      run: |
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        echo "$TARGET_HOST_KEY" >> $HOME/.ssh/known_hosts

    - run: npm run deploy
    - name: Purge Cloudflare Cache
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        # unlimited-code.works
        CLOUDFLARE_ZONE_ID: 5871e95620ff2784c4e902f8398e51bd
      run: |
        curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache" \
          -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
          -H "Content-Type: application/json" \
          --data '{"purge_everything":true}'
