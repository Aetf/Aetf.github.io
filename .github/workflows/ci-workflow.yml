name: Hexo Site CI

# Trigger the workflow on push to any branch,
# or pull request to the develop branch
on:
  push:
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Timezone
      run: sudo timedatectl set-timezone America/Detroit

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 14
    # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)
    - name: Cache node modules
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - run: npm run build
    - run: npm test
    - name: Upload hexo database
      uses: actions/upload-artifact@v2
      with:
        name: hexo-db
        path: |
          db.json
          node_modules/.cache/webpack

  linkcheck:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Timezone
      run: sudo timedatectl set-timezone America/Detroit

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 14
    # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)
    - name: Cache node modules
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - name: Download hexo database
      uses: actions/download-artifact@v2
      with:
        name: hexo-db

    - name: Check links with linkcheck
      run: |
        npm run serve &
        curl -JOL 'https://github.com/filiph/linkcheck/releases/latest/download/linkcheck-linux-x64.exe'
        chmod +x ./linkcheck-linux-x64.exe
        timeout 15 bash -c 'until echo > /dev/tcp/localhost/4000; do sleep 0.5; done'
        ./linkcheck-linux-x64.exe -e --no-check-anchors --skip-file tools/link-check-skip.txt :4000 \
        || ./linkcheck-linux-x64.exe -e --no-check-anchors --skip-file tools/link-check-skip.txt :4000

  deploy:
    needs: [build, linkcheck]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    steps:
    - name: Timezone
      run: sudo timedatectl set-timezone America/Detroit

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 14
    # Caching dependencies to speed up workflows. (GitHub will remove any cache entries that have not been accessed in over 7 days.)
    - name: Cache node modules
      uses: actions/cache@v2
      id: cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm ci
    - name: Download hexo database
      uses: actions/download-artifact@v2
      with:
        name: hexo-db

    - name: Setup SSH
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        TARGET_HOST_KEY: '[archvps.hosts.unlimited-code.works]:59901 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIBepF3TmcoEzemMXgvn3p2P8O0q6I+07uPEecu+8qutu'
      run: |
        mkdir -p ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        echo "$TARGET_HOST_KEY" >> $HOME/.ssh/known_hosts

    - run: npm run deploy
    - name: Purge Cloudflare Cache
      env:
        CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
        CLOUDFLARE_USER_EMAIL: 7437103@gmail.com
        # unlimited-code.works
        CLOUDFLARE_ZONE_ID: 5871e95620ff2784c4e902f8398e51bd
      run: |
        curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache" \
          -H "X-Auth-Email: $CLOUDFLARE_USER_EMAIL" \
          -H "X-Auth-Key: $CLOUDFLARE_API_KEY" \
          -H "Content-Type: application/json" \
          --data '{"purge_everything":true}'
